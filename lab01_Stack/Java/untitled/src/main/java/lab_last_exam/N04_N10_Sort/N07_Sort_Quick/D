Задача: Отсортировать массив данных

Алгоритм:
1. Выбрать элемент из массива. Назовём его опорным.
2. Разбиение: перераспределение элементов в массиве таким образом,
что элементы меньше опорного помещаются перед ним, а больше или равные после.
3. Рекурсивно применить первые два шага к двум подмассивам слева и справа от опорного элемента.
Рекурсия не применяется к массиву, в котором только один элемент или отсутствуют элементы.


Время:
Худший случай: O(N*k) = O(N*(N-1)) = O(N^2), где К – глубина рекурсии
Пояснение: Когда опорный элемент выбирается таким образом, что массив делится на подмассивы, длина
одного из которых всегда будет равна 1, тогда у нас произойдет К делений, то есть К = N - 1, отсюда
и получаем N^2

Лучший случай: O(NlogN)
Пояснение: на каждом вызове алгоритма у нас будет произведено N операций, а всего вызовов алгоритма
будет в лучшем случае logN раз (например, если будем удачно выбирать опорный элемент)


Память:
Худший случай: М(N) - количество вызовов рекурсии

Лучший случай: M(logN) – количество вызовов рекурсии

Примечание:
Если удачно выбирать опорный элемент, то сортировка является одной из самых оптимальных
Улучшенная версия BubbleSort

